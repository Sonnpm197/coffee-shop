version: "3.7"
services:
  zookeeper:
#    restart: always
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper-volume:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      backend:
        aliases:
          - "zookeeper"
  kafka:
#    restart: always
    image: docker.io/bitnami/kafka:3.3
    ports:
      - "9092:9092"
    volumes:
      - "kafka-volume:/bitnami"
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      backend:
        aliases:
          - "kafka"

  redis:
    image: redis:7.2.4
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      backend:
        aliases:
          - "redis"

  keycloak:
    image: quay.io/keycloak/keycloak:18.0.2
    volumes:
      - /home/sonnpm/keycloak:/opt/keycloak/data/
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    ports:
      - "8080:8080"
    command:
      - start-dev
    networks:
      backend:
        aliases:
          - "keycloak"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - 9300:9300
      - 9200:9200
    networks:
      backend:
        aliases:
          - "elasticsearch"
  kibana:
    image: docker.elastic.co/kibana/kibana:7.7.0
    container_name: kibana
    environment:
      ELASTICSEARCH_URL: "http://elasticsearch:9300"
    ports:
      - 5601:5601
    networks:
      backend:
        aliases:
          - "kibana"
  logstash:
    image: docker.elastic.co/logstash/logstash:7.7.0
    container_name: logstash
    command: logstash -f /etc/logstash/conf.d/logstash.conf
    volumes:
      - ./config:/etc/logstash/conf.d
    ports:
      - "5000:5000"
    networks:
      backend:
        aliases:
          - "logstash"

  zipkin:
    image: openzipkin/zipkin:3.3
    container_name: zipkin
    ports:
      - 9411:9411
    networks:
      backend:
        aliases:
          - "zipkin"

  #          -----------------Spring Services---------------------------

  config-server:
    image: sonnpm/coffee-shop/config-server:0.0.1
    container_name: config-server
    ports:
      - "8071:8071"
    networks:
      backend:
        aliases:
          - "config-server"
    depends_on:
      kafka:
        condition: service_started

  eureka-server:
    image: sonnpm/coffee-shop/eureka-server:0.0.1
    container_name: eureka-server
    ports:
      - "8765:8765"
    networks:
      backend:
        aliases:
          - "eureka-server"
    depends_on:
      config-server:
        condition: service_started

  gateway-server:
    image: sonnpm/coffee-shop/gateway-server:0.0.1
    container_name: gateway-server
    ports:
      - "8888:8888"
    depends_on:
      eureka-server:
        condition: service_started
    networks:
      backend:
        aliases:
          - "gateway-server"

  order-service:
    image: sonnpm/coffee-shop/order-service:0.0.1
    container_name: order-service
    ports:
      - "8081:8081"
    networks:
      backend:
        aliases:
          - "order-service"
    depends_on:
      - config-server
      - eureka-server

  payment-service:
    image: sonnpm/coffee-shop/payment-service:0.0.1
    container_name: payment-service
    ports:
      - "8082:8082"
    networks:
      backend:
        aliases:
          - "payment-service"
    depends_on:
      - config-server
      - eureka-server

volumes:
  kafka-volume:
  zookeeper-volume:
  redis_data:
  esdata1:
    driver: local

networks:
  backend:
    driver: bridge